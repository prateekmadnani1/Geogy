{"ast":null,"code":"var _jsxFileName = \"/Users/prateekmadnani/Desktop/Git/green-energy-platform/src/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, TextField, Card, Typography, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLogin\n}) => {\n  _s();\n  const [loginType, setLoginType] = useState(''); // Owner or User\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    if (!loginType || !username || !password) {\n      alert('Please fill all fields');\n      return;\n    }\n\n    // Simulate authentication and redirect based on loginType\n    onLogin(loginType); // Pass the login type to parent component\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        padding: '20px',\n        maxWidth: '400px',\n        width: '100%',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        style: {\n          marginBottom: '20px',\n          textAlign: 'center'\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"login-type-label\",\n          children: \"Login As\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"login-type-label\",\n          value: loginType,\n          onChange: e => setLoginType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"owner\",\n            children: \"Parking Lot Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"user\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Username\",\n        variant: \"outlined\",\n        fullWidth: true,\n        style: {\n          marginBottom: '20px'\n        },\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        variant: \"outlined\",\n        fullWidth: true,\n        style: {\n          marginBottom: '20px'\n        },\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"kKdS6izUqUPaMJp255GLLJ3KCjk=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Button","TextField","Card","Typography","Select","MenuItem","FormControl","InputLabel","jsxDEV","_jsxDEV","LoginPage","onLogin","_s","loginType","setLoginType","username","setUsername","password","setPassword","handleLogin","alert","style","display","justifyContent","alignItems","height","children","padding","maxWidth","width","boxShadow","variant","marginBottom","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","id","labelId","value","onChange","e","target","label","type","color","onClick","_c","$RefreshReg$"],"sources":["/Users/prateekmadnani/Desktop/Git/green-energy-platform/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, TextField, Card, Typography, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\n\nconst LoginPage = ({ onLogin }) => {\n  const [loginType, setLoginType] = useState(''); // Owner or User\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    if (!loginType || !username || !password) {\n      alert('Please fill all fields');\n      return;\n    }\n\n    // Simulate authentication and redirect based on loginType\n    onLogin(loginType); // Pass the login type to parent component\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n      <Card style={{ padding: '20px', maxWidth: '400px', width: '100%', boxShadow: '0 2px 10px rgba(0,0,0,0.1)' }}>\n        <Typography variant=\"h5\" style={{ marginBottom: '20px', textAlign: 'center' }}>\n          Login\n        </Typography>\n        <FormControl fullWidth style={{ marginBottom: '20px' }}>\n          <InputLabel id=\"login-type-label\">Login As</InputLabel>\n          <Select\n            labelId=\"login-type-label\"\n            value={loginType}\n            onChange={(e) => setLoginType(e.target.value)}\n          >\n            <MenuItem value=\"owner\">Parking Lot Owner</MenuItem>\n            <MenuItem value=\"user\">User</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField\n          label=\"Username\"\n          variant=\"outlined\"\n          fullWidth\n          style={{ marginBottom: '20px' }}\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          fullWidth\n          style={{ marginBottom: '20px' }}\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleLogin}>\n          Login\n        </Button>\n      </Card>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}